/* Se define la dependencia funcional */
depends([er, et, ez, grt, grz, gtz], [r, t, z])$
depends([r, t], [x, y])$

/* Se especifican "manualmente" las derivadas dr_dx, dr_dy, dt_dx, dt_dy */
gradef(r,x,  cos(t))$    gradef(r,y, sin(t))$    /* ecuaciones (*\eqref{eq:derrthetaxya}*) */
gradef(t,x, -sin(t)/r)$  gradef(t,y, cos(t)/r)$  /* ecuaciones (*\eqref{eq:derrthetaxyb}*) */

/* Se define la matriz de transformación T (*\eqref{eq:matTcilindricas}*) */
T : matrix(
[ cos(t), -sin(t), 0 ],
[ sin(t),  cos(t), 0 ],
[      0,       0, 1 ]
)$

/* Se definen las deformaciones angulares matemáticas ert, erz y etz */
ert : grt/2$       erz : grz/2$       etz : gtz/2$

/* Se define la matriz de deformaciones en coord. cilíndricas, ec. (*\eqref{eq:matdefcil}*) */
def_cil : matrix(
[ er,  ert, erz ],
[ ert, et,  etz ],
[ erz, etz, ez  ]
)$

/* Se convierte dicha matriz de deformaciones a coordenadas rectangulares */
def: T.def_cil.transpose(T)$ /* ecuación (*\eqref{eq:defTdefprimaTT_cil}*) */

/* Se extraen los términos de la matriz de deformaciones en coordenadas */ 
/* rectangulares */
ex  : def[1][1]$         ey  : def[2][2]$         ez  : def[3][3]$
gxy : 2*def[1][2]$       gxz : 2*def[1][3]$       gyz : 2*def[2][3]$

/* Ecuaciones de compatibilidad en coordenadas rectangulares (*\eqref{eq:compatibilidad3D}*). Tenga */
/* en cuenta que estas ecuaciones se escribieron de modo tal que sus lados */
/* derechos son iguales a cero */
e1: diff(ex, y,2) + diff(ey, x,2) - diff(gxy, x,1, y,1)$
e2: diff(ey, z,2) + diff(ez, y,2) - diff(gyz, y,1, z,1)$
e3: diff(ez, x,2) + diff(ex, z,2) - diff(gxz, x,1, z,1)$
e4: 2*diff(ex, y,1, z,1) - diff(- diff(gyz,x) + diff(gxz,y) + diff(gxy,z),x)$
e5: 2*diff(ey, x,1, z,1) - diff(+ diff(gyz,x) - diff(gxz,y) + diff(gxy,z),y)$
e6: 2*diff(ez, x,1, y,1) - diff(+ diff(gyz,x) + diff(gxz,y) - diff(gxy,z),z)$

/* Se toma el límite cuando "t tiende a cero" */
eqs : expand(ev(trigsimp([r*e1, e2, e3, e4, e5, e6]), sin(t)=0, cos(t)=1));
