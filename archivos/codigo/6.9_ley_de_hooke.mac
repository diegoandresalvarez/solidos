/* Se define la matriz de transformación T, ecuación (*\eqref{eq:matTcilindricas}*) */
T : matrix(
[ cos(t), -sin(t), 0 ],
[ sin(t),  cos(t), 0 ],
[      0,       0, 1 ]
)$

/* Se define la matriz de tensiones en coordenadas cilíndricas, ec. (*\eqref{eq:mattensionescil}*) */
sigma_cil : matrix(
[ sr,  trt, trz ],
[ trt, st,  ttz ],
[ trz, ttz, sz  ]
)$

/* Se convierte dicha matriz de tensiones a coordenadas rectangulares */
sigma: T.sigma_cil.transpose(T)$  /* ecuación (*\eqref{eq:tauTtauPTT}*) */

/* Se extraen los términos de la matriz de tensiones en coordenadas */
/* rectangulares */
sx  : sigma[1][1]$    sy  : sigma[2][2]$    sz  : sigma[3][3]$
txy : sigma[1][2]$    txz : sigma[1][3]$    tyz : sigma[2][3]$

/* Se define la matriz de deformaciones en coord. cilíndricas, ec. (*\eqref{eq:matdefcil}*) */
def_cil : matrix(
[ er,  ert, erz ],
[ ert, et,  etz ],
[ erz, etz, ez  ]
)$

/* Se convierte dicha matriz de deformaciones a coordenadas rectangulares */
def: T.def_cil.transpose(T)$ /* ecuación (*\eqref{eq:defTdefprimaTT_cil}*) */

/* Se extraen los términos de la matriz de deformaciones en coordenadas */ 
/* rectangulares */
ex  : def[1][1]$      ey  : def[2][2]$      ez  : def[3][3]$
gxy : 2*def[1][2]$    gxz : 2*def[1][3]$    gyz : 2*def[2][3]$

/* La ley de Hooke en coordenadas rectangulares, ecs. (*\eqref{eq:3deforma}*) y (*\eqref{eq:gammas}*) */
eq1: ex  = (1/E)*(sx - nu*(sy + sz))$
eq2: ey  = (1/E)*(sy - nu*(sx + sz))$
eq3: ez  = (1/E)*(sz - nu*(sx + sy))$
eq4: gxy = txy/G$
eq5: gxz = txz/G$
eq6: gyz = tyz/G$

/* Se toma el límite cuando t tiende a cero y se hacen las sustituciones: */
/* grt por 2*ert, grz por 2*erz y gtz por 2*etz */
limit([eq1, eq2, eq3, eq4, eq5, eq6], t, 0)$
subst([2*ert=grt, 2*erz=grz, 2*etz=gtz], %);

/* Se despejan los esfuerzos para encontrar las ecuaciones de Lamé */
factor(solve(%, [sr,st,sz,trt,trz,ttz]));
