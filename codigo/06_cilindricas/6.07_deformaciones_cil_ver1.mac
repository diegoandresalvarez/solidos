/* Se especifica que ur, vt y w son funciones de r, t y z */
/* y que r y t son funciones de x y de y */
depends([ur, vt, w], [r, t, z])$
depends([r, t], [x, y])$

/* Se especifican "manualmente" las derivadas dr_dx, dr_dy, dt_dx, dt_dy */
gradef(r,x,  cos(t))$    gradef(r,y, sin(t))$    /* ecuaciones (*\eqref{eq:derrthetaxya}*) */
gradef(t,x, -sin(t)/r)$  gradef(t,y, cos(t)/r)$  /* ecuaciones (*\eqref{eq:derrthetaxyb}*) */

/* Se define la matriz de transformación T, ecuación (*\eqref{eq:matTcilindricas}*) */
T : matrix(
[ cos(t), -sin(t), 0 ],
[ sin(t),  cos(t), 0 ],
[      0,       0, 1 ]
)$

/* Vector de desplazamientos con respecto a la base {r,t,z} */
vec_u_cil : matrix([ ur ], [ vt ], [ w ])$

/* Se expresa el vector de desplazamientos con respecto a la base {i,j,k} */
vec_u : T.vec_u_cil$

/* Se hace la asignación respectiva de los desplazamientos */
u : vec_u[1][1]$
v : vec_u[2][1]$

/* se definen las deformaciones en coordenadas rectangulares */
ex  : diff(u,x)$
ey  : diff(v,y)$
ez  : diff(w,z)$
gxy : diff(u,y) + diff(v,x)$
gxz : diff(u,z) + diff(w,x)$
gyz : diff(v,z) + diff(w,y)$

/* Deformaciones matemáticas en términos de deformaciones ingenieriles */
exy : gxy/2$          exz : gxz/2$          eyz : gyz/2$

/* Se define el tensor de deformaciones con respecto a la base {i,j,k} */
eps : matrix(
[ ex,  exy, exz ],
[ exy, ey,  eyz ],
[ exz, eyz, ez  ]
)$

/* Se convierte dicho tensor de deformaciones a la base {r,t,z} */
eps_cil: expand(trigsimp(transpose(T).eps.T))$ /* ecuación (*\eqref{eq:defTdefprimaTT_cil}*) */

/* Se extraen los términos de la matriz de deformaciones en coordenadas */
/* rectangulares */
er  : eps_cil[1][1];
et  : eps_cil[2][2];
ez  : eps_cil[3][3];
grt : 2*eps_cil[1][2], expand;
grz : 2*eps_cil[1][3], expand;
gtz : 2*eps_cil[2][3], expand;
