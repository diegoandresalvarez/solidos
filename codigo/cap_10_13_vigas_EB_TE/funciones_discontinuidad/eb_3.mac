load("pw")$        /* se carga la libreria pw                   */
ratprint  : false$ /* no muestra el mensaje "rat: replace"      */
keepfloat : true$  /* no racionalizar numeros en coma flotante  */

/* Se definen las cargas distribuidas de acuerdo con la Tabla   */
/* Caso 2: carga puntual */
qpunt(p,a)   :=  p*pwdelta(x-a)$

/* Caso 5: carga distribuida variable */
qdist(f,a,b) :=  pw([a,f,b], x, 'open)$

/* Funcion rectangular: si x>a y x<b retorne 1 sino retorne 0   */
rect(a,b)    :=  pw([a,1,b], x, 'open)$

/* Se especifica el vector de cargas q(x)                       */
q : qdist(-12,10,16) + qpunt(-30,5)$

b : 0.1$           /* Ancho de la viga, m                       */
h : 0.3$           /* Altura de la viga, m                      */
E : 210e6$         /* Modulo de elasticidad de la viga, kPa     */
I : (b*h^3)/12$    /* Momento de inercia en z, m^4              */

/* Se resuelve la ecuacion diferencial tramo por tramo          */
/* Tramo 1 */
q1 : pwsimp(q*rect(0,10), x)$  /* restriccion de q al tramo 1   */
V1 : pwint(q1,x)       + C1_1$
M1 : pwint(V1,x)       + C1_2$
t1 : pwint(M1/(E*I),x) + C1_3$
v1 : pwint(t1,x)       + C1_4$

/* Tramo 2 */
q2 : pwsimp(q*rect(10,16), x)$ /* restriccion de q al tramo 2   */
V2 : pwint(q2,x)       + C2_1$
M2 : pwint(V2,x)       + C2_2$
t2 : pwint(M2/(E*I),x) + C2_3$
v2 : pwint(t2,x)       + C2_4$

/* Tramo 3 */
q3 : pwsimp(q*rect(16,19), x)$ /* restriccion de q al tramo 3   */
V3 : pwint(q3,x)       + C3_1$
M3 : pwint(V3,x)       + C3_2$
t3 : pwint(M3/(E*I),x) + C3_3$
v3 : pwint(t3,x)       + C3_4$

/* Se encuentran las constantes de integracion que satisfacen las 
   condiciones de frontera */
sol : solve([ 
ev(v1,x=0)  = 0,           /* despl vert en apoyo en x=0 es 0  */
ev(t1,x=0)  = 0,           /* theta en apoyo en x=0 es 0       */

ev(v1,x=10) = 0,           /* despl vert en apoyo en x=10 es 0 */
ev(v2,x=10) = 0,           /* despl vert en apoyo en x=10 es 0 */
ev(t1,x=10) = ev(t2,x=10), /* continuidad en theta en x=10     */
ev(M1,x=10) = ev(M2,x=10), /* continuidad en M     en x=10     */

ev(v2,x=16) = 0,           /* despl vert en apoyo en x=16 es 0 */
ev(v3,x=16) = 0,           /* despl vert en apoyo en x=16 es 0 */
ev(t2,x=16) = ev(t3,x=16), /* continuidad en theta en x=16     */
ev(M2,x=16) = ev(M3,x=16), /* continuidad en M     en x=16     */

ev(M3,x=19) = 0,           /* momento flector en x=19 es 0     */
ev(V3,x=19) = 15 ],        /* fuerza cortante en x=19 es 15    */
[ C1_1, C1_2, C1_3, C1_4, 
  C2_1, C2_2, C2_3, C2_4, 
  C3_1, C3_2, C3_3, C3_4 ])$

/* Se "fusionan" las respuestas en una sola y se reemplaza aqui 
   el valor de las constantes                                  */
V : V1*rect(0,10) + V2*rect(10,16) + V3*rect(16,19), sol$
M : M1*rect(0,10) + M2*rect(10,16) + M3*rect(16,19), sol$
t : t1*rect(0,10) + t2*rect(10,16) + t3*rect(16,19), sol$
v : v1*rect(0,10) + v2*rect(10,16) + v3*rect(16,19), sol$

/* Se imprimen los resultados */
print("V(x) = ")$ pwsimp(expand(V), x, 'array)$
print("M(x) = ")$ pwsimp(expand(M), x, 'array)$
print("t(x) = ")$ pwsimp(expand(t), x, 'array)$
print("v(x) = ")$ pwsimp(expand(v), x, 'array)$

/* Se grafican los resultados */
wxplot2d(V, [x, 0, 19], [xlabel, "x"], [ylabel,"V(x)"])$
wxplot2d(M, [x, 0, 19], [xlabel, "x"], [ylabel,"M(x)"])$
wxplot2d(t, [x, 0, 19], [xlabel, "x"], [ylabel,"t(x)"])$
wxplot2d(v, [x, 0, 19], [xlabel, "x"], [ylabel,"v(x)"])$

/* Se calculan las reacciones en la viga */
print("M(x= 0)  = ")$ -M1,      sol, x= 0, numer; /* mom en x=0 */
print("Fy(x= 0) = ")$ V1,       sol, x= 0, numer; /* Ry en x= 0 */
print("Fy(x=10) = ")$ V2-V1-25, sol, x=10, numer; /* Ry en x=10 */
print("Fy(x=16) = ")$ V3-V2,    sol, x=16, numer; /* Ry en x=16 */
print("Calculo finalizado")$
