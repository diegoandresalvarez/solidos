t : 1$ /* espesor = 1 m */
V : 0$ /* V=0, ya que no se considerarán las fuerzas másicas */

/* Se propone la función de tensión de Airy */
phi : A20*x^2 + A21*x^2*y + A03*y^3 + A23*x^2*y^3 - A23*y^5/5$

/* se define el laplaciano y el biarmónico de una función "f" */
lapl(f) := expand(diff(f,x,2) + diff(f,y,2))$  /* laplaciano de f */
biar(f) := expand(lapl(lapl(f)))$              /* biarmónico de f ((*\ref{eq:biarmonicolaplaciano}*)) */ 

/* se verifica que se satisfaga la ecuación ((*\ref{eq:airystressfunction}*)) */
if biar(phi) = K2*lapl(V) then 
   print("LA ECUACION BIARMONICA SE SATISFACE")
else    
   print("LA ECUACION BIARMONICA NO SE SATISFACE")$

/* se definen los esfuerzos utilizando la función de tensión de Airy */
sx  :  diff(phi, y,2) + V$   /* ecuación ((*\ref{eq:airysigmasa}*)) */
sy  :  diff(phi, x,2) + V$   /* ecuación ((*\ref{eq:airysigmasb}*)) */
txy : -diff(phi, x,1, y,1)$  /* ecuación ((*\ref{eq:airysigmasc}*)) */

/* se definen la fuerza cortante ((*\ref{eq:cortanteviga1}*)), el momento flector ((*\ref{eq:momentoviga1}*)) */
/* y la fuerza axial ((*\ref{eq:cfxvigab}*)) */
V(xx)  := -integrate(integrate(ev(txy, x=xx),   z, 0, t), y, -c, c)$
M(xx)  := -integrate(integrate(ev(sx,  x=xx)*y, z, 0, t), y, -c, c)$
faxial :   integrate(integrate(   sx,           z, 0, t), y, -c, c)$

/* se establecen las condiciones de frontera ((*\ref{eq:cfyviga}*)) */
e1 : ev(txy, y=+c) = 0$
e2 : ev(txy, y=-c) = 0$
e3 : ev(sy,  y=+c) = q/t$
e4 : ev(sy,  y=-c) = 0$

/* se establecen las condiciones de frontera ((*\ref{eq:cfxviga}*)) */
e5 : V(-L)  = -q*L$
e6 : V(+L)  = +q*L$
e7 : M(-L)  = 0$
e8 : M(+L)  = 0$
e9 : faxial = 0$         /* para todo x en [-L, L] */

/* utilizando las ecuaciones "e1" a "e9" se encuentran las constantes */
/* "A20", "A21", "A03" y "A23" */
A20210323: solve([e1, e2, e3, e4, e5, e6, e7, e8, e9], [A20, A21, A03, A23]);

/* se reemplazan "A20", "A21", "A03" y "A23" en los esfuerzos sx, sy y txy */
[sx, sy, txy] : [sx, sy, txy], A20210323, factor$

/* se compara la solución obtenida con las ecuaciones ((*\ref{eq:eqsxsytxyviga}*)) */
I : 2*t*c^3/3$
sx2  : -(q/(2*I))*(x^2*y - 2*y^3/3 + 2*c^2*y/5 - L^2*y)$
sy2  : -(q/(2*I))*(y^3/3 - c^2*y - 2*c^3/3)$
txy2 : -(q/(2*I))*(c^2 - y^2)*x$

/* El resultado de la siguiente línea es  [0, 0, 0] */
factor([sx-sx2, sy-sy2, txy-txy2]);

/* se define el módulo de rigidez*/
G : E/(2*(1+nu))$

/* ley de Hooke para tensión plana, ecuaciones ((*\ref{eq:epsilontensionplana}*)) */
ex  : (1/E)*(sx - nu*sy)$
ey  : (1/E)*(sy - nu*sx)$
gxy : (1/G)*txy$

/* Se calcula la ecuación ((*\ref{eq:dfdy_dgdx}*)) */
df_dy_dg_dx : gxy - diff(integrate(ex, x), y) - diff(integrate(ey, y), x);

/* y se separan sus términos df_dy y dg_dx teniendo en cuenta el término */
/* constante w0 */
terminos_constantes : ev(df_dy_dg_dx, x=0, y=0);
terminos_en_y       : ev(df_dy_dg_dx, x=0) - terminos_constantes;
terminos_en_x       : ev(df_dy_dg_dx, y=0) - terminos_constantes;
df_dy : expand(terminos_en_y + terminos_constantes) + w0;
dg_dx : expand(terminos_en_x) - w0;

/* se integran las funciones df_dy y dg_dx teniendo en cuenta las */
/* constantes de integración u0 y v0 */
f : integrate(df_dy, y) + u0;    /* f es una función solo de y */
g : integrate(dg_dx, x) + v0;    /* g es una función solo de x */

/* se calculan los desplazamientos utilizando las ecuaciones ((*\ref{eq:calc_despla_exf_eyg}*)) */
u : integrate(ex, x) + f$
v : integrate(ey, y) + g$

/* solo resta encontrar el valor de u0, v0 y w0 a partir de las  */
/* condiciones de frontera y el conocimiento que en el centro de */
/* la viga el desplazamiento es nulo:                            */
u0v0w0 : solve([ ev(u, x=0      )=0, 
                 ev(v, x=+L, y=0)=0, 
                 ev(v, x=-L, y=0)=0  ], [u0, v0, w0]);

[u, v] : [u, v], u0v0w0, expand;

/* se calcula el desplazamiento vertical en x=0, y=0 */
v, x=0, y=0, expand;
